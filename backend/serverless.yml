org: adibtatriantama
app: voting-app
service: voting-app
useDotenv: true

custom:
  MainTableArn:
    Fn::GetAtt: [MainTable, Arn]

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - '${self:custom.MainTableArn}'
        - Fn::Join:
            - ''
            - - '${self:custom.MainTableArn}'
              - '/index/*'

  httpApi:
    cors:
      allowedOrigins:
        - https://adibta-fcc-voting-app.vercel.app
    authorizers:
      JwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - https://cognito-idp.
              - ${aws:region}
              - .amazonaws.com/
              - Ref: CognitoUserPool
        audience:
          Ref: CognitoUserPoolClient

  environment:
    TABLE_NAME:
      Ref: MainTable

resources:
  Resources:
    MainTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: 'PK'
            AttributeType: 'S'
          - AttributeName: 'SK'
            AttributeType: 'S'
          - AttributeName: 'GSI1PK'
            AttributeType: 'S'
          - AttributeName: 'GSI1SK'
            AttributeType: 'S'
          - AttributeName: 'GSI2PK'
            AttributeType: 'S'
          - AttributeName: 'GSI2SK'
            AttributeType: 'S'
        KeySchema:
          - AttributeName: 'PK'
            KeyType: 'HASH'
          - AttributeName: 'SK'
            KeyType: 'RANGE'
        BillingMode: 'PAY_PER_REQUEST'
        TimeToLiveSpecification:
          AttributeName: expireAt
          Enabled: true
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: 'GSI1PK'
                KeyType: 'HASH'
              - AttributeName: 'GSI1SK'
                KeyType: 'RANGE'
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: 'GSI2PK'
                KeyType: 'HASH'
              - AttributeName: 'GSI2SK'
                KeyType: 'RANGE'
            Projection:
              ProjectionType: ALL

    CognitoUserPoolVotingAppUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        # Set email as an alias
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
        Schema:
          - AttributeDataType: String
            Mutable: true
            Name: nickname
            Required: true

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        UserPoolId:
          Ref: CognitoUserPoolVotingAppUserPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
