org: adibtatriantama
app: voting-app
service: voting-app
useDotenv: true

custom:
  MainTableArn:
    Fn::GetAtt: [MainTable, Arn]
  UserPoolId:
    Ref: CognitoUserPoolVotingAppUserPool
  UserPoolClientId:
    Ref: CognitoUserPoolClient
  UserDir: src/useCase/user
  PollDir: src/usecase/poll

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - '${self:custom.MainTableArn}'
        - Fn::Join:
            - ''
            - - '${self:custom.MainTableArn}'
              - '/index/*'

  httpApi:
    cors:
      allowedOrigins:
        - https://adibta-fcc-voting-app.vercel.app
    authorizers:
      JwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - https://cognito-idp.
              - ${aws:region}
              - .amazonaws.com/
              - Ref: CognitoUserPoolVotingAppUserPool
        audience:
          Ref: CognitoUserPoolClient

  environment:
    TABLE_NAME:
      Ref: MainTable

functions:
  findOwnUser:
    handler: ${self:custom.UserDir}/findUserById/handler.main
    events:
      - httpApi:
          path: /me
          method: get
          authorizer:
            name: JwtAuthorizer
  createUser:
    handler: ${self:custom.UserDir}/createUser/handler.main
    events:
      - cognitoUserPool:
          pool: VotingAppUserPool
          trigger: PostConfirmation

  createPoll:
    handler: ${self:custom.PollDir}/createPoll/handler.main
    events:
      - httpApi:
          path: /poll
          method: post
          authorizer:
            name: JwtAuthorizer
  findOnePollById:
    handler: ${self:custom.PollDir}/findOnePollById/handler.main
    events:
      - httpApi:
          path: /poll/{pollId}
          method: get
  findPoll:
    handler: ${self:custom.PollDir}/findPoll/handler.main
    events:
      - httpApi:
          path: /poll
          method: get
  findMyPoll:
    handler: ${self:custom.PollDir}/findMyPoll/handler.main
    events:
      - httpApi:
          path: /me/poll
          method: get
          authorizer:
            name: JwtAuthorizer
  addVote:
    handler: ${self:custom.PollDir}/addVote/handler.main
    events:
      - httpApi:
          path: /poll/{pollId}/vote
          method: post
    environment:
      COGNITO_POOL_ID: '${self:custom.UserPoolId}'
      COGNITO_POOL_CLIENT_ID: '${self:custom.UserPoolClientId}'

resources:
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/cognito-user-pool.yml)}
