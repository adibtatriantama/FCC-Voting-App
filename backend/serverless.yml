org: adibtatriantama
app: voting-app
service: voting-app
useDotenv: true

custom:
  MainTableArn:
    Fn::GetAtt: [MainTable, Arn]

plugins:
  - serverless-esbuild
  - serverless-offline
  - serverless-dynamodb-local

provider:
  name: aws
  runtime: nodejs14.x
  region: ap-southeast-1
  stage: dev
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:BatchGetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - '${self:custom.MainTableArn}'
        - Fn::Join:
            - ''
            - - '${self:custom.MainTableArn}'
              - '/index/*'

  httpApi:
    cors:
      allowedOrigins:
        - https://adibta-fcc-voting-app.vercel.app
    authorizers:
      JwtAuthorizer:
        type: jwt
        identitySource: $request.header.Authorization
        issuerUrl:
          Fn::Join:
            - ''
            - - https://cognito-idp.
              - ${aws:region}
              - .amazonaws.com/
              - Ref: CognitoUserPoolVotingAppUserPool
        audience:
          Ref: CognitoUserPoolClient

  environment:
    TABLE_NAME:
      Ref: MainTable

functions:
  createUser:
    handler: src/useCase/createUser/handler.main
    events:
      - cognitoUserPool:
          pool: VotingAppUserPool
          trigger: PostConfirmation

  createPoll:
    handler: src/useCase/createPoll/handler.main
    events:
      - httpApi:
          path: /poll
          method: post
          authorizer:
            name: JwtAuthorizer
  findOnePollById:
    handler: src/useCase/findOnePollById/handler.main
    events:
      - httpApi:
          path: /poll/{pollId}
          method: get
  findPoll:
    handler: src/useCase/findPoll/handler.main
    events:
      - httpApi:
          path: /poll
          method: get

resources:
  - ${file(resources/dynamodb-table.yml)}
  - ${file(resources/cognito-user-pool.yml)}
